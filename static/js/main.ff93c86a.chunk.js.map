{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","urls","title","ImageHolder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","checked","onHandleImageClick","bind","assertThisInitialized","onHandleImageError","prevProps","setState","cssClass","react_default","a","createElement","className","onClick","src","onError","Component","ImageHolderList","_this2","_this3","length","setTimeout","el","scrollTo","_this4","ref","style","borderStyle","borderColor","maxWidth","maxHeight","overflowY","overflowX","marginTop","map","i","App_ImageHolder","key","NSFWCategory","_this5","name","handleCheckboxChange","handleFileUpload","e","urls2","concat","push","URL","createObjectURL","target","files","type","onChange","App_ImageHolderList","App","marginLeft","cat","App_NSFWCategory","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff93c86a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst data = [\n  {\n    \"urls\" : [\"blob:http://localhost:3000/1e0619a6-2d12-456e-a63a-a4a13abd810c\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"title\" : \"Porn\",\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"title\" : \"Explicit Nudity\",\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"title\" : \"Animated Porn\",\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"title\" : \"Gore\",\n\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"title\" : \"Suggestive Nudity\",\n  }\n]\n\nclass ImageHolder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: this.props.url,\n      checked: this.props.checked\n    }\n    this.onHandleImageClick = this.onHandleImageClick.bind(this)\n    this.onHandleImageError = this.onHandleImageError.bind(this)\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.checked != this.props.checked) {\n      this.setState({\n        checked: !prevProps.checked\n      })\n    }\n  }\n\n  onHandleImageClick() {\n    this.setState({\n      checked: !this.state.checked,\n    })\n  }\n\n  onHandleImageError() {\n    this.setState({\n      url: 'https://mycyberuniverse.com/images/thumbnail/error.png'\n    })\n  }\n\n  render() {\n    let cssClass = this.state.checked ? 'image-holder-selected' : 'image-holder-unselected'\n    return (\n      <span>\n        <img className={cssClass} onClick={this.onHandleImageClick} src={this.state.url} onError={this.onHandleImageError}/>\n      </span>\n    )\n  }\n}\n\nclass ImageHolderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      urls : this.props.urls,\n      checked: this.props.checked\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.checked != this.props.checked) {\n      this.setState({\n        checked: !prevProps.checked\n      })\n    }\n    if(this.props.urls.length > prevProps.urls.length) {\n      this.setState({\n        urls : this.props.urls\n      })\n      setTimeout(() => {this.el.scrollTo(0,10000)},200)\n    }\n  }\n\n  render() {\n    return (\n      <div ref={el => {this.el = el}} style={{ borderStyle:'solid', borderColor:'#d3d3d3', maxWidth: 800, maxHeight:300, overflowY:'auto', overflowX:'auto', marginTop: 20}}>\n      {this.state.urls.map((url,i) => (<ImageHolder key={i} url={url} checked={this.state.checked}></ImageHolder>))}\n      </div>\n    )\n  }\n}\n\nclass NSFWCategory extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name : this.props.name,\n      urls: this.props.urls,\n      checked: false,\n    }\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this)\n    this.handleFileUpload = this.handleFileUpload.bind(this)\n  } \n  handleCheckboxChange(e) {\n    let checked = !this.state.checked\n    this.setState({\n      checked: checked\n    })\n    \n  }\n\n  handleFileUpload(e) {\n    let urls2 = this.state.urls.concat([])\n    urls2.push(URL.createObjectURL(e.target.files[0]))\n    this.setState({\n      urls: urls2\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.name}</h2>\n        <div>\n          <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleCheckboxChange}/> select all\n        </div>\n        <div>\n          <ImageHolderList urls={this.state.urls || []} checked={this.state.checked}></ImageHolderList>\n\n          <div className=\"upload-btn-wrapper\">\n            <button className=\"btn\">Upload your own image</button>\n            <input type=\"file\" name=\"myfile\" onChange={this.handleFileUpload}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={{marginLeft : 30}}>\n        {data.map(cat => (<NSFWCategory key={cat[\"title\"]} name={cat[\"title\"]} urls={cat[\"urls\"]}></NSFWCategory>))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}