{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["generateS3UrlsFromDict","data","base_image_folder","map","name","replace","fileNameToS3","generateS3FileName","index","suffix","urls","image_indexes","Object","toConsumableArray","Array","keys","num","image_folder","title","checked","ImageHolder","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","onHandleImageClick","bind","assertThisInitialized","onHandleImageError","prevProps","setState","cssClass","react_default","a","createElement","className","onClick","src","onError","Component","ImageHolderList","_this2","_this3","length","setTimeout","el","scrollTo","_this4","ref","style","borderStyle","borderColor","maxWidth","maxHeight","overflowY","overflowX","marginTop","i","App_ImageHolder","key","NSFWCategory","_this5","handleCheckboxChange","handleFileUpload","e","urls2","concat","push","URL","createObjectURL","target","files","display","alignItems","marginRight","react_switch_default","onChange","checkedIcon","uncheckedIcon","onColor","id","fontSize","App_ImageHolderList","type","App","console","log","marginLeft","cat","App_NSFWCategory","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a96f49f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Switch from \"react-switch\";\n\n\nexport function fileNameToS3(name) {\n  return (\n    'https://' +\n    ('https://s3-us-west-2.amazonaws.com/nanonets/' + name)\n      .replace(/^https:\\/\\//, '')\n      .replace(/\\/+/g, '/')\n      .replace(/\\/+$/, '')\n  );\n}\n\nexport function generateS3UrlsFromDict(data) {\n  let base_image_folder = data[\"image_folder\"];\n  let image_urls = data[\"image_indexes\"].map(name => fileNameToS3(base_image_folder + name));\n  return image_urls;\n}\n\nexport function generateS3FileName(index, suffix) {\n  return (index + 1) + suffix;\n}\n\nconst MAX_IMAGE_INDEX_PORN = 182;\nconst MAX_IMAGE_INDEX_ANIMATED_PORN = 39;\nconst MAX_IMAGE_INDEX_EXPLICIT_NUDITY = 74;\nconst MAX_IMAGE_INDEX_GORE = 45;\nconst MAX_IMAGE_INDEX_SUGGESTIVE_NUDITY = 5;\nconst MAX_IMAGE_INDEX_SFW = 285;\n\nconst data = [\n  {\n    \"urls\" : [\"blob:http://localhost:3000/1e0619a6-2d12-456e-a63a-a4a13abd810c\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_PORN).keys()].map(num => generateS3FileName(num, \"_porn.jpg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/nsfw/porn/\",\n    \"title\" : \"Porn\",\n    \"checked\": true\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_EXPLICIT_NUDITY).keys()].map(num => generateS3FileName(num, \"_en.jpeg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/nsfw/explicit_nudity/\",\n    \"title\" : \"Explicit Nudity\",\n    \"checked\": true\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_ANIMATED_PORN).keys()].map(num => generateS3FileName(num, \"_ap.jpeg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/nsfw/animated_porn/\",\n    \"title\" : \"Animated Porn\",\n    \"checked\": true\n    \n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_GORE).keys()].map(num => generateS3FileName(num, \"_gore.jpeg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/nsfw/gore/\",\n    \"title\" : \"Gore\",\n    \"checked\": true\n\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_SUGGESTIVE_NUDITY).keys()].map(num => generateS3FileName(num, \"_sn.jpeg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/nsfw/suggestive_nudity/\",\n    \"title\" : \"Suggestive Nudity\",\n    \"checked\": false\n  },\n  {\n    \"urls\" : [\"1\",\"2\",\"3\",\"1\",\"2\",\"3\"],\n    \"image_indexes\": [...Array(MAX_IMAGE_INDEX_SFW).keys()].map(num => generateS3FileName(num, \"_sfw.jpeg\")),\n    \"image_folder\": \"uploadedfiles/nsfw_data/sfw/\",\n    \"title\" : \"Safe for Work\",\n    \"checked\": false\n  }\n]\n\nclass ImageHolder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: this.props.url,\n      checked: this.props.checked,\n    }\n    this.onHandleImageClick = this.onHandleImageClick.bind(this)\n    this.onHandleImageError = this.onHandleImageError.bind(this)\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.checked != this.props.checked) {\n      this.setState({\n        checked: !prevProps.checked\n      })\n    }\n  }\n\n  onHandleImageClick() {\n    this.setState({\n      checked: !this.state.checked,\n    })\n  }\n\n  onHandleImageError() {\n    this.setState({\n      url: 'https://mycyberuniverse.com/images/thumbnail/error.png',\n    })\n  }\n\n  render() {\n    let cssClass = this.state.checked ? 'image-holder-selected' : 'image-holder-unselected'\n\n    return (\n      <span>\n        <img\n          className={cssClass}\n          onClick={this.onHandleImageClick}\n          src={this.state.url}\n          onError={this.onHandleImageError}\n        />\n      </span>\n    )\n  }\n}\n\nclass ImageHolderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      urls : this.props.urls,\n      checked: this.props.checked\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.checked != this.props.checked) {\n      this.setState({\n        checked: !prevProps.checked\n      })\n    }\n    if(this.props.urls.length > prevProps.urls.length) {\n      this.setState({\n        urls : this.props.urls\n      })\n      setTimeout(() => {this.el.scrollTo(0,10000)},200)\n    }\n  }\n\n  render() {\n    return (\n      <div ref={el => {this.el = el}} style={{ borderStyle:'solid', borderColor:'#d3d3d3', maxWidth: 800, maxHeight:300, overflowY:'auto', overflowX:'auto', marginTop: 20}}>\n        {this.state.urls.map(\n          (url,i) => (<ImageHolder key={i} url={url} checked={this.state.checked}></ImageHolder>))\n        }\n      </div>\n    )\n  }\n}\n\nclass NSFWCategory extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name : this.props.name,\n      urls: this.props.urls,\n      checked: this.props.checked,\n    }\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this)\n    this.handleFileUpload = this.handleFileUpload.bind(this)\n  } \n  handleCheckboxChange(e) {\n    let checked = !this.state.checked\n    this.setState({\n      checked: checked\n    })\n    \n  }\n\n  handleFileUpload(e) {\n    let urls2 = this.state.urls.concat([])\n    urls2.push(URL.createObjectURL(e.target.files[0]))\n    this.setState({\n      urls: urls2\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.name}</h2>\n        <div style={{display: 'flex', alignItems:'center'}}>\n\n        <span style={{display:'inline-block', marginRight: 10}}>Mark all as NSFW</span>\n        <Switch onChange={this.handleCheckboxChange} checked={this.state.checked} checkedIcon={false} uncheckedIcon={false} onColor='#cf4545' id=\"normal-switch\"/>\n        {/* <input style={{marginLeft:20}} type=\"checkbox\" checked={!this.state.checked} onChange={this.handleCheckboxChange}/> Mark all as NSFW */}\n        </div>\n        <div style={{fontSize: 14, marginTop: 5}}><i >(toggle individual images by clicking on them)</i></div>\n        <div>\n          <ImageHolderList urls={this.state.urls || []} checked={this.state.checked}></ImageHolderList>\n\n          <div className=\"upload-btn-wrapper\">\n            <button className=\"btn\">Upload your own image</button>\n            <input type=\"file\" name=\"myfile\" onChange={this.handleFileUpload}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  render() {\n    console.log(data);\n    return (\n      <div style={{marginLeft : 30}}>\n        {\n          data.map(\n            cat => (\n              <NSFWCategory\n                key={cat[\"title\"]}\n                checked={cat[\"checked\"]}\n                name={cat[\"title\"]}\n                urls={generateS3UrlsFromDict(cat)}\n              >\n              </NSFWCategory>\n            )\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}